<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright 2011-2014 Marvell Semiconductor, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<program xmlns="http://www.kinoma.com/kpr/1">

    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- ASSETS -->
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    
	<require id="PLOTTER" path="plotter"/>
    
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- BEHAVIORS -->
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    
	<behavior id = "ApplicationBehavior">
		<method id="onLaunch" params="content"><![CDATA[
			/**
				Initializes a GraphContainer, which includes the GraphCanvas,
				upon which values are drawn, and the GraphLabel, which displays
				the value as text. 
			*/
			var graph = new GraphContainer();
			
			/**
				Parameters for the plotter
					name- unique identifier
					interval- ms between updates
					buckets- number of values displayed on the screen at once
					background- background color
					strokeStyle- color of the line
					lineWidth- width of the line
					string- label to precede the value in the Graph Label
					complement- if true, graph ( 1 - value ) rather than the value 
			*/
        	var plotterParams = {
        		name: "sensor1",		
     			interval: 10,
				buckets:200,
        		background: "white",
        		strokeStyle: "red",
				lineWidth: 4,
				string: "x",
				complement: false
			};
			
			graph.add( new GraphCanvas( plotterParams ) );
			graph.add( new GraphLabel( plotterParams) );
			var mainContainer = new MainContainer();
			mainContainer.add( graph ); 
			application.add( mainContainer );
			
			application.invoke( new MessageWithObject( "pins:configure", {
                analogSensor: {
                    require: "a2d",
                    pins: {
                        a2d: { pin: 52 }
                    }
                }
            }));
		]]></method>
	</behavior>
 
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- LAYOUTS  -->
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->	
    
	<style id = "labelStyle" font="30px Helvetica bold" color= "#47476B"  />
                    
    <column id="MainContainer" top="0" left="0" bottom="0" right="0">
    	<skin color="white"/>
    </column>

	<container id = "GraphContainer" top = "0" bottom = "0" left ="0" right = "0" />

	<line id="GraphLabel"  left="10" bottom="5">
		<skin color="#B3FFFFFF"/>      
		<label string="'--'" style = "labelStyle" >
			<behavior>
				<method id="onCreate" params="content, data"><![CDATA[
					//display the label 
					content.string = data.string + ":";
				]]></method>
			</behavior>
         </label>
         <label string="'--'" style = "labelStyle" >
     		<behavior>
     			<method id="onCreate" params="content, data"><![CDATA[
					this.name = data.name; 
				]]></method>
				<method id="onReceiveReading" params="content, reading, name"><![CDATA[
                 	//update the value string
					if ( this.name == name ) {
                     	content.string = reading.toFixed(2);
 					}
				]]></method>
             </behavior>
         </label>
    </line>
    
    <canvas id = "GraphCanvas" top = "5" bottom = "5" left ="5" right = "5" like = "PLOTTER.Plotter">
    	<behavior like = "PLOTTER.PlotterBehavior">
        	<method id="onTimeChanged" params="content"><![CDATA[
				content.invoke( new MessageWithObject( "pins:/analogSensor/read" ), Message.JSON );
			]]></method>
        </behavior>
    </canvas>
    
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- SCRIPTS -->
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    
    <script><![CDATA[
		application.behavior = new ApplicationBehavior();
	]]></script>
	
</program>
