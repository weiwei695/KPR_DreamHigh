<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright 2011-2014 Marvell Semiconductor, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<program xmlns="http://www.kinoma.com/kpr/1">

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- ASSETS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<skin id="footerSkin" color="#203a6e"/>
	
	<texture id="toggleSwitchForegroundTexture" small="./assets/switchForeground.png"/>
	<texture id="toggleSwitchBackgroundTexture" small="./assets/switchBackground.png"/>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- STYLES -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<style id="labelStyle" font="bold 72px" color="white" align="center,middle"/>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- BEHAVIORS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<behavior id="ToggleSwitchBehavior">
		<method id="onCreate" params="port, data"><![CDATA[
			this.onOff = data.onOff;
			this.switchForeground = toggleSwitchForegroundTexture;
			this.switchBackground = toggleSwitchBackgroundTexture;
			
			this.$size = this.switchBackground.width - this.switchForeground.width;
			this.$offset = ("off" == this.onOff ? this.$size : 0);
			this.$touched = false;
			this.$capturing = false;
			this.$touchMovedOffset = 15;
		]]></method>
		<method id="onTouchBegan" params="port, id, x, y, ticks"><![CDATA[
			if (port.running) {
				port.stop();
				port.time = port.duration;
			}
			this.$anchor = x;
			this.$delta = this.$offset + x;
			this.$touched = true;
			port.invalidate();
		]]></method>
		<method id="onTouchCancelled" params="port, id, x, y, ticks"><![CDATA[
			this.$touched = false;
		]]></method>
		<method id="onTouchMoved" params="port, id, x, y, ticks"><![CDATA[
			if (this.$capturing)
				this.$offset = this.constraint(port, this.$delta - x);
			else if (Math.abs(x - this.$anchor) >= this.$touchMovedOffset) {
				port.captureTouch(id, x, y, ticks);
				this.$capturing = true;
				this.$offset = this.constraint(port, this.$delta - x);
			}
			port.invalidate();
		]]></method>
		<method id="onTouchEnded" params="port, id, x, y, ticks"><![CDATA[
			var offset = this.$offset;
			var size = this.$size;
			var delta = size >> 1;
			this.$anchor = offset;
			if (this.$capturing) {
				if (offset < delta)
					delta = 0 - offset;
				else 
					delta = size - offset;
			}
			else {
				if (offset == 0)
					delta = size;
				else
					delta = 0 - size;
			}
			if (delta) {
				this.$delta = delta;
				port.duration = 250 * Math.abs(delta) / size;
				port.time = 0;
				port.start();
			}
			else
				this.onFinished(port);
			port.invalidate();
		]]></method>
		<method id="onTimeChanged" params="port"><![CDATA[
			var fraction = port.fraction;
			this.$offset = this.$anchor + Math.round(this.$delta * fraction);
			port.invalidate();
		]]></method>
		<method id="onFinished" params="port"><![CDATA[
			this.$touched = false;
			this.$capturing = false;
			
			if (this.$offset == 0)
				this.onOff = "on";
			else
				this.onOff = "off";
				
			this.onSwitchChanged(port, this.onOff);
		]]></method>
		<method id="onSwitchChanged" params="port, onOff"><![CDATA[
			debugger
		]]></method>
		<method id="constraint" params="port, offset"><![CDATA[
			if (offset < 0)
				offset = 0;
			else if (offset > this.$size)
				offset = this.$size;
			return offset;
		]]></method>
		<method id="onDraw" params="port, x, y, width, height"><![CDATA[
			port.pushClip();
			port.intersectClip(x + 6, y + 6, width - 12, height - 12);
			port.drawImage(this.switchBackground, x - this.$offset, y, width + this.$size, height, 
				0, this.$touched ? 40 : 0, width + this.$size, height);
			port.popClip();
			port.drawImage(this.switchForeground, x, y, width, height);
		]]></method>
	</behavior>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- LAYOUTS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<container id="MainContainer" left="0" right="0" top="0" bottom="0">
		<port anchor="BODY" left="0" right="0" top="0" bottom="60" style="labelStyle">
			<behavior>
				<method id="onCreate" params="port, data"><![CDATA[
					this.data = data;
				]]></method>
				<method id="onDraw" params="port, x, y, width, height"><![CDATA[
					port.fillColor( "black", x, y, width, height );
					port.drawLabel( "off" == this.data.onOff ? "Off" : "On" , x, y, width, height );
				]]></method>
			</behavior>
		</port>
		<container anchor="FOOTER" left="0" right="0" bottom="0" height="60" skin="footerSkin">
			<port width="toggleSwitchForegroundTexture.width" height="toggleSwitchForegroundTexture.height" active="true">
				<behavior like="ToggleSwitchBehavior">
					<method id="onCreate" params="port, data"><![CDATA[
						this.data = data;
						ToggleSwitchBehavior.prototype.onCreate.call(this, port, data);
					]]></method>
					<method id="onSwitchChanged" params="port, onOff"><![CDATA[
						this.data.onOff = onOff;
						this.data.BODY.invalidate();
					]]></method>
				</behavior>
			</port>
		</container>
	</container>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- SCRIPTS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	
	<script><![CDATA[
		application.add( new MainContainer( { onOff: "off" } ));
	]]></script>

</program>
