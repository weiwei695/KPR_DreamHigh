<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright 2011-2014 Marvell Semiconductor, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<program xmlns="http://www.kinoma.com/kpr/1">

    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- ASSETS -->
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    
	<skin id="background" color="white"/>
	
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- HANDLERS -->
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    	
	<handler path="/gotColor">
		<behavior>
			<method id="onInvoke" params="container, message"><![CDATA[
				/**
					convert the reading into hex color value and
					reset the skin to be that color 
				*/
				var result = message.requestObject;
                var r = result.r.toString(16), g = result.g.toString(16), b = result.b.toString(16);
                if ( r.length < 2 ) r = "0" + r;
                if ( g.length < 2 ) g = "0" + g;
                if ( b.length < 2 ) b = "0" + b;
                string = "#" + r + g + b;
				application.skin = new Skin(string);
			]]></method>
		</behavior>
	</handler>
	
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- BEHAVIORS -->
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->	
	
	<behavior id="ApplicationBehavior">
		<method id="onLaunch" params="application"><![CDATA[
			application.invoke( new MessageWithObject( "pins:configure", {
				colorSensor: {
					require: "TCS34725",
					pins: {
						rgb: { sda: 27, clock: 29, integrationTime: 23 },
						led: { pin: 21 }
					}
				}
			}));
			
			application.invoke( new MessageWithObject( "pins:/colorSensor/getColor?repeat=on&callback=/gotColor&interval=33" ) );
		]]></method>
	</behavior> 

    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- SCRIPTS -->
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->	
    
	<script><![CDATA[
		application.behavior = new ApplicationBehavior();
	]]></script>
</program>