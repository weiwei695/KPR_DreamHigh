<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright 2011-2014 Marvell Semiconductor, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<program xmlns="http://www.kinoma.com/kpr/1">

	<require id="TRANSITIONS" path="transitions"/>
	
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- ASSETS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<skin id="blackSkin" color="black"/>
	<skin id="blueSkin" color="blue"/>
	<skin id="yellowSkin" color="yellow"/>
	<skin id="whiteSkin" color="white"/>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- STYLES -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<style id="hugeLabelStyle" font="bold 125px" color="black" align="middle,center"/>
	<style id="buttonStyle" font="bold 18px" color="black" align="middle,center"/>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- LAYOUTS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<container id="MainScreen" left="0" top="0" right="0" bottom="0" active="true" skin="blackSkin">
		<behavior>
			<method id="onCreate" params="container, data"><![CDATA[
				this.AtoB = true
				this.numTransitions = 11
				this.index = 0
			]]></method>            
			<method id="onTriggerTransition" params="container"><![CDATA[
				var toScreen = this.AtoB ? new ScreenB() : new ScreenA();
				this.AtoB = !this.AtoB;
				
				switch ( this.index ) {
					case 0:
						container.run( new TRANSITIONS.CrossFade(), container.last, toScreen, { duration : 900 } );
						break;
					case 1:
						container.run( new TRANSITIONS.Push(), container.last, toScreen, { direction : "left", duration : 400 } );
						break;
					case 2:
						container.run( new TRANSITIONS.Push(), container.last, toScreen, { direction : "right", duration : 400 } );
						break;
					case 3:
						container.run( new TRANSITIONS.Push(), container.last, toScreen, { direction : "up", easeType : "bounceEaseOut", duration : 600 } );
						break;
					case 4:
						container.run( new TRANSITIONS.Push(), container.last, toScreen, { direction : "down", easeType : "backEaseIn", duration : 600 } );
						break;
					case 5:
						container.run( new TRANSITIONS.Flip(), container.last, toScreen, { direction : "left" } );
						break;
					case 6:
						container.run( new TRANSITIONS.Flip(), container.last, toScreen, { direction : "right" } );
						break;
					case 7:
						container.run( new TRANSITIONS.Flip(), container.last, toScreen, { direction : "up", easeType : "sineEaseOut", duration : 750 } );
						break;
					case 8:
						container.run( new TRANSITIONS.Flip(), container.last, toScreen, { direction : "down", easeType : "sineEaseOut", duration : 750 } );
						break;
					case 9:
						container.run( new TRANSITIONS.TimeTravel(), container.last, toScreen, { direction : "forward", easeType : "sineEaseIn", duration : 1000 } );
						break;
					case 10:
						container.run( new TRANSITIONS.TimeTravel(), container.last, toScreen, { direction : "back", easeType : "sineEaseOut", duration : 1000 } );
						break;
				}
				
				this.index++
				if ( this.index >= this.numTransitions )
					this.index = 0;
			]]></method>
		</behavior>
		<container left="0" right="0" bottom="0" height="40" skin="whiteSkin" active="true">
			<behavior>
				<method id="onTouchBegan" params="container, id, x, y, ticks">
					container.bubble( "onTriggerTransition" );
				</method>
			</behavior>
			<label left="0" right="0" top="0" bottom="0" style="buttonStyle" string="'Tap here to run next transition'"/>
		</container>
	</container>
	
	<container id="ScreenA" left="0" top="0" right="0" bottom="40" skin="blueSkin">
		<label left="0" right="0" string="'A'" style="hugeLabelStyle"/>
	</container>
	
	<container id="ScreenB" left="0" top="0" right="0" bottom="40" skin="yellowSkin">
		<label left="0" right="0" string="'B'" style="hugeLabelStyle"/>
	</container>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- SCRIPTS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<script>
		<![CDATA[
			var data = {}
			var mainScreen = new MainScreen( data );
			
			var screenA = new ScreenA();
			var screenB = new ScreenB();
			
			application.add( mainScreen )
			mainScreen.add( screenA )
		]]>
	</script>
</program>