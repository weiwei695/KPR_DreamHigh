<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright 2011-2014 Marvell Semiconductor, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<program xmlns="http://www.kinoma.com/kpr/1">
	<require id="MODEL" path="mobile/model"/>
	
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- ASSETS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<skin id="whiteSkin" color="white"/>
	<skin id="redSkin" color="red"/>
	<skin id="greenSkin" color="green"/>
	<skin id="blueSkin" color="blue"/>
	<skin id="selectionSkin">
		<states colors="white,#edbc3c"/>
	</skin>
    
    <style id="feedbackStyle" font="bold 26px" color="white" align="middle,center"/>
    
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- LAYOUTS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	
	<container id="FeedbackContainer" left="0" right="0" top="0" bottom="0">
		<behavior>
			<method id="onCreate" params="container, data"><![CDATA[
				this.data = data;
				container.duration = 2500;
			]]></method>
			<method id="onDisplaying" params="container, data"><![CDATA[
				var label = new Label({left: 0, right: 0, string: "Saving preferences: " + this.data.color, style: feedbackStyle});
				var layer = this.layer = new Layer({width: container.width, height: container.height});
				layer.add(label);
				container.add(layer);
				container.start();
			]]></method>
			<method id="onTimeChanged" params="container"><![CDATA[
				this.layer.opacity = 1 - Math.quadEaseOut(container.fraction);
			]]></method>
			<method id="onFinished" params="container"><![CDATA[
				container.container.remove(container);
			]]></method>
		</behavior>
	</container>   
	                           
	<container id="ColorSwatchContainer" left="0" right="0" top="0" bottom="0" skin="selectionSkin" active="true">
		<behavior>
			<method id="onCreate" params="container, data"><![CDATA[
				this.data = data;
				container.state = ( model.preferences.color == this.data.color ? 1 : 0 );
			]]></method>
			<method id="onTouchBegan" params="container, id, x, y, ticks"><![CDATA[
				model.preferences.color = this.data.color;
				model.writePreferences( application, "swatches", model.preferences );
				application.distribute( "onSelectionChanged", model.preferences.color );
			]]></method>	
			<method id="onSelectionChanged" params="container, color"><![CDATA[
				container.state = ( color == this.data.color ? 1 : 0 );
				if (color == this.data.color)
					container.add(new FeedbackContainer(this.data));
			]]></method>
		</behavior>
		<container left="4" right="4" top="4" bottom="4" skin="$.skin"/>
	</container>                              

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- MODEL -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<script><![CDATA[
		var model = application.behavior = new MODEL.ApplicationBehavior( application );
		
		model.preferences = model.readPreferences( application, "swatches", { color: "red" } );
		
		var background = new Container( { left: 0, right: 0, top:0, bottom: 0 }, whiteSkin );
		var column = new Column( { left: 0, right: 0, top:0, bottom: 0 } );
		column.add( new ColorSwatchContainer( { skin: redSkin, color: "red" } ) );
		column.add( new ColorSwatchContainer( { skin: greenSkin, color: "green" } ) );
		column.add( new ColorSwatchContainer( { skin: blueSkin, color: "blue" } ) );
		
		background.add( column );
		application.add( background );
	]]></script>

</program>
